implementation module StdRoman

import StdEnv, RomeinsGetal

instance +			Roman where ...
instance -  		Roman where ...

instance zero		Roman where ...

instance *  		Roman where ...

instance /			Roman where ...
instance one		Roman where ...


instance ^			Roman where ...
instance abs		Roman where ...
instance sign		Roman where ...
instance ~			Roman where ...

instance ==			Roman where ...
instance <  		Roman where ...
instance isEven 	Roman where ...
instance isOdd		Roman where ...

class toRoman a :: !a -> Roman
instance toRoman	Char  where ...
instance toRoman	Int   where ...
instance toRoman	Real  where ...
instance toRoman {#Char}  where ...

class fromRoman a :: !Roman -> a
instance fromRoman	Int   where ...
instance fromRoman	Char  where ...
instance fromRoman	Real  where ...
instance fromRoman {#Char}where ...

instance rem Roman        where ...
instance gcd Roman        where ...
instance lcm Roman        where ...

Start :: (Roman,String,Int,Int)
Start = (r,fromRoman r,toInt r,n)
where
	r = (toRoman 42) * (toRoman 101)
	n = 42 * 101
